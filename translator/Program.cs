using System;
using System.Collections.Generic;
using System.IO;
using System.Text;

namespace translator
{
    class Program
    {
        static string eol1 = Environment.NewLine;
        static string eol2 = "";

        static string nameTranslate = "nSysTranslationInfo";
        static void Main(string[] args)
        {


            int ilosctlumaczeni = args.Length - 1;
            eol2 = eol1 + eol1;
            StringBuilder sb = new StringBuilder();

            string root = args[0];
            Localization l = new Localization();
            l.LocalizationUi = new List<Item>();

            List<Item> listaTranslate = new List<Item>();
            string[] linie = File.ReadAllLines(args[1]);
            /*
             * nazwa controlki
             * wersja polska 
             * wersja angielska
             * property
             
             */
            foreach (var item in linie)
            {
                
                string[] kolumny = item.Split(';');
                string property = kolumny[0];
                string def = kolumny[1];
                string tr = kolumny[2];
                int ilosc = kolumny.Length;
                for (int i = 3; i < ilosc; i++)
                {
                    Item a = new Item();
                    a.Name = property;
                    a.Root = root;
                    a.Def = def;
                    a.Translation = tr;
                    string type = kolumny[i];
                    switch (type)
                    {
                        case "c":
                            a.Property = "Caption";
                            break;
                        case "t":
                            a.Property = "Text";
                            break;
                        default:
                            break;
                    }
                    listaTranslate.Add(a);

                }

            }
            File.WriteAllText("aaa.txt", listaTranslate.Serialize());
            sb.Append("deklararacja nSysTranslationInfo1" + eol2);
            return;
            for (int i = 1; i <= ilosctlumaczeni; i++)
            {
                sb.Append("Lsi.Nvm.Lib.nSys.Translation.NSysTranslationInfo " + nameTranslate + (i + 1) + " = new Lsi.Nvm.Lib.nSys.Translation.NSysTranslationInfo();" + eol1);
            }
            for (int i = 1; i <= ilosctlumaczeni; i++)
            {
                Item ii = new Item(root, args[i], "Caption", "tr_" + args[i]);
                l.LocalizationUi.Add(ii);
            }



            string tlumaczenie = l.Serialize();
            sb.Append(eol2 + "tlumaczenie dla en" + eol1);
            sb.Append(tlumaczenie);


            sb.Append(eol2 + "definiowanie nSysTranslationInfo1 " + eol1);

            for (int i = 1; i <= ilosctlumaczeni; i++)
            {
                sb.Append(defTranslate(i, root, args[i]));
                sb.Append("this.nSysTranslator.Translations.Add(" + nameTranslate + (i + 1) + ");" + eol1);
                sb.Append(eol1);
            }



            File.WriteAllText("wynik.txt", sb.ToString());
            System.Windows.Forms.MessageBox.Show("Test");

        }

        private static string defTranslate(int i, string rooot, string name)
        {
            string naglowek = nameTranslate + (i + 1);
            string result = naglowek + ".AutoGenerated = true;" + eol1;
            result += naglowek + ".Default = \"domyslnetlumaczenie " + name + "\";" + eol1;
            result += naglowek + ".Description = \"\";" + eol1;
            result += naglowek + ".Name = \"" + name + "\";" + eol1;
            result += naglowek + ".Property = \"Caption\";" + eol1;
            result += naglowek + ".Root = \"" + rooot + "\"; " + eol1;


            /*
        nSysTranslationInfo1.Root = "Lsi.Nvm.App.NPosManager.WinLogic.UserControls.Kasa.KasaRejestrLokaluRaportKasowyZ" +
"estawienieGridPresenter";
             */
            return result;
        }
    }
}
